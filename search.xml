<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[MySQL自动备份脚本]]></title>
    <url>%2F2019%2F04%2F24%2FMySQL%E8%87%AA%E5%8A%A8%E5%A4%87%E4%BB%BD%E8%84%9A%E6%9C%AC%2F</url>
    <content type="text"><![CDATA[通过 shell 脚本定时备份数据库，并定时清理12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667#!/bin/bash#Desc:本地数据库备份脚本#Date:2017-12-24#by:Lee-YJ#运行脚本前先创建一个备份用户，并授予权限#mysql&gt; grant select,insert,lock tables,show view,trigger on *.* to back@"127.0.0.1" identified by "oodaeh7phoe1iboh7Jua";#mysql&gt; flush privileges;mysqluser=back #用于数据库备份的用户名mysqlpassw=oodaeh7phoe1iboh7Jua #用户密码mysqlhost=127.0.0.1 #连接数据库的hostbakpath=/opt/data/Back/DBbak #备份数据库存放的路径bakdate=`date '+%Y%m%d'`baktime=`date '+%H%M'`#----------------------------获取mysql中的数据库名---------------------------------/usr/bin/mysql -u$mysqluser -h $mysqlhost -p$mysqlpassw -e "show databases;"|grep -v Database|grep -v information_schema |grep -v performance_schema|grep -v mysql|grep -v test &gt; /tmp/DBname#----------------------------数据库备份--mysqldump备份------------------------------if [ ! -d "$bakpath" ];then mkdir -p $bakpathficd $bakpathif [ ! -d "$bakdate" ];then mkdir $bakdateficd $bakdateecho "------------------------$bakdate$baktime-------------------------------------" &gt;&gt; $bakpath/DBbak.logfor DBname in `cat /tmp/DBname`;do if [ ! -d "$DBname" ];then mkdir $DBname fi /usr/bin/mysqldump --routines --triggers -u$mysqluser -h $mysqlhost -p$mysqlpassw $DBname &gt; $DBname/$baktime\.sql if [ $? = 0 ];then echo "$DBname Back OK!" &gt;&gt; $bakpath/DBbak.log else echo "$DBname Back ERROR!" &gt;&gt; $bakpath/DBbak.log fidoneecho "" &gt;&gt; $bakpath/DBbak.log #----------------------------删除5天之前的数据备份，并随机保留一份--------------------------------shopt -s extglobolddate=`date '+%Y%m%d' -d "-6 days"`cd $bakpath/$olddatefor deldbname in `ls $bakpath/$olddate`;do cd $deldbname file=`ls| sort -R | head -n1` rm -f !($file)doneif [ ! -d "$bakpath/Oldest" ];then mkdir -p $bakpath/Oldestfimv $bakpath/$olddate $bakpath/Oldest/rm -f /tmp/DBnameMySQL备份脚本]]></content>
      <categories>
        <category>Linux</category>
        <category>Shell</category>
      </categories>
      <tags>
        <tag>Linux运维日常</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ftp虚拟用户]]></title>
    <url>%2F2019%2F04%2F23%2Fftp%E8%99%9A%E6%8B%9F%E7%94%A8%E6%88%B7%2F</url>
    <content type="text"><![CDATA[需求：进（账户）\username: ftpComeSsbq\password: ftpcome#@UkieO9\上传文件的目录：/opt/ftp/come 出（账户）\username: ftpOutSsbq\password: ftpout#@45oUkie\上床文件的目录：/opt/ftp/out 具体步骤1 安装软件1# yum -y install vsftpd 2 创建相应的ftp数据目录1# mkdir -p /opt/ftp/&#123;come,out&#125; 3 创建一个用户提供给虚拟用户使用1# useradd -s /sbin/nologin virtual 4 将ftp数据目录设置成virtual用户12345# chown virtual. /opt/ftp/ -R# ll /opt/ftp/total 8drwxr-xr-x 2 virtual virtual 4096 Apr 17 12:07 comedrwxr-xr-x 2 virtual virtual 4096 Apr 17 12:07 out 5 创建虚拟帐号与密码的文本文件(一行账号，一行密码, 注意不要有多余的空格)12345# vim /etc/vsftpd/logins.txtftpComeSsbqftp_come_#@UkieO9ftpOutSsbqftp_out_#@45oUkie 6 将创建好的密码文件txt格式转换db格式1# db_load -T -t hash -f /etc/vsftpd/logins.txt /etc/vsftpd/login.db 7 定义db文件的权限1# chmod 600 /etc/vsftpd/login.db 8 定义pam认证文件123# vim /etc/pam.d/ftpauth required /lib64/security/pam_userdb.so db=/etc/vsftpd/loginaccount required /lib64/security/pam_userdb.so db=/etc/vsftpd/login 9 配置vsftpd主配置文件123456789101112131415161718192021222324252627282930313233343536# cp /etc/vsftpd/vsftpd.conf&#123;,.bak&#125;# vim /etc/vsftpd/vsftpd.conf#禁止匿名登录FTP服务器anonymous_enable=NO#允许本地用户登录FTP服务器local_enable=YES#可以上传(全局控制) write_enable=NO#匿名用户可以上传anon_upload_enable=NO#匿名用户可以建目录anon_mkdir_write_enable=NO#匿名用户修改删除anon_other_write_enable=NO#全部用户被限制在主目录chroot_local_user=YES#将所有用户看成虚拟用户guestguest_enable=YES#指定虚拟用户，也就是将guest用户映射到virtual用户guest_username=virtual#指定为独立服务listen=YES#指定监听的端口listen_port=21#开启被动模式pasv_enable=YES#FTP服务器公网IPpasv_address=120.79.93.66#设置被动模式下，建立数据传输可使用port范围的最小值pasv_min_port=10000#设置被动模式下，建立数据传输可使用port范围的最大值pasv_max_port=10088#是否允许匿名用户下载全局可读的文件anon_world_readable_only=NO#指定虚拟用户配置文件的路径user_config_dir=/etc/vsftpd/user_conf 10 创建上面配置文件中指定的子配置文件目录 user_conf1# mkdir /etc/vsftpd/user_conf 11 定义 ftpComeSsbq 用户的配置文件1234567# vim /etc/vsftpd/user_conf/ftpComeSsbqwrite_enable=YESanon_world_readable_only=noanon_upload_enable=YESanon_mkdir_write_enable=YESanon_other_write_enable=YESlocal_root=/opt/ftp/come 12 定义 ftpOutSsbq 用户的配置文件1234567# vim /etc/vsftpd/user_conf/ftpOutSsbqwrite_enable=YESanon_world_readable_only=noanon_upload_enable=YESanon_mkdir_write_enable=YESanon_other_write_enable=YESlocal_root=/opt/ftp/out 13 启动vsftpd1# service vsftpd start 14 测试…]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux运维日常</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[测试标题a]]></title>
    <url>%2F2019%2F04%2F22%2Flinux%2F</url>
    <content type="text"><![CDATA[12345678910111213141516171819202122232425262728293031323334353637383940414243server &#123; listen 80; server_name tj.86court.com; autoindex off; error_log logs/gitTianJinCourt/www_error.log error; access_log logs/gitTianJinCourt/www_access.log main; location ~ ^/XS_FILE/(.+\.(?:gif|jpe?g|JPE?G|png|pdf|bmp|zip|psd|tga|eps|tiff|doc|docx))$ &#123; internal; alias /opt/2018_Project/tjOnlineFiling/src/sys_file/$1; &#125; location ~ ^/upload/(.+\.(?:gif|jpe?g|png|pdf|doc|docx))$ &#123; alias /opt/2018_Project/tjOnlineFiling/src/upload/upload/$1; &#125; location / &#123; root /opt/2018_Project/tjOnlineFiling/src/www; index index.php index.html index.htm; if ($request_uri ~* .*\$) &#123; access_log logs/ngx_refuse/404.log;break;&#125; if (!-e $request_filename) &#123; rewrite ^(.*)$ /index.php?s=$1 last; break; &#125; &#125; fastcgi_intercept_errors on; error_page 404 /404.html; location ~ \.php$ &#123; root html; fastcgi_pass 127.0.0.1:9000; fastcgi_index index.php; fastcgi_param SCRIPT_FILENAME /opt/2018_Project/tjOnlineFiling/src/www$fastcgi_script_name; include fastcgi_params; &#125; location ~ /\. &#123; deny all; error_page 403 /404.html; &#125;&#125; More info: Deployment]]></content>
      <categories>
        <category>开车</category>
      </categories>
      <tags>
        <tag>测试</tag>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2019%2F04%2F21%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
