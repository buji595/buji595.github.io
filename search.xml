<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[linux下解压windows上压缩rar包]]></title>
    <url>%2F2019%2F04%2F30%2Flinux%E4%B8%8B%E8%A7%A3%E5%8E%8Bwindows%E4%B8%8A%E5%8E%8B%E7%BC%A9rar%E5%8C%85%2F</url>
    <content type="text"><![CDATA[下载# wget http://www.rarlab.com/rar/rarlinux-3.8.0.tar.gz 安装1234# tar xvzf rarlinux-3.8.0.tar.gz# cd rar# make # make install rar命令语法将 /etc 目录压缩为 etc.rar 命令为：\# rar a etc.rar /etc\将 etc.rar 解压 命令为：\12rar x etc.rarunrar -e etc.rar rar帮助手册123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108# rarRAR 3.80 Copyright (c) 1993-2008 Alexander Roshal 16 Sep 2008Shareware version Type RAR -? for helpUsage: rar &lt;command&gt; -&lt;switch 1&gt; -&lt;switch N&gt; &lt;archive&gt; &lt;files...&gt; &lt;@listfiles...&gt; &lt;path_to_extract\&gt;&lt;Commands&gt; a Add files to archive c Add archive comment cf Add files comment ch Change archive parameters cw Write archive comment to file d Delete files from archive e Extract files to current directory f Freshen files in archive i[par]=&lt;str&gt; Find string in archives k Lock archive l[t,b] List archive [technical, bare] m[f] Move to archive [files only] p Print file to stdout r Repair archive rc Reconstruct missing volumes rn Rename archived files rr[N] Add data recovery record rv[N] Create recovery volumes s[name|-] Convert archive to or from SFX t Test archive files u Update files in archive v[t,b] Verbosely list archive [technical,bare] x Extract files with full path&lt;Switches&gt; - Stop switches scanning ad Append archive name to destination path ag[format] Generate archive name using the current date ap&lt;path&gt; Set path inside archive as Synchronize archive contents av Put authenticity verification (registered versions only) av- Disable authenticity verification check c- Disable comments show cfg- Disable read configuration cl Convert names to lower case cu Convert names to upper case df Delete files after archiving dh Open shared files ds Disable name sort for solid archive dw Wipe files after archiving e[+]&lt;attr&gt; Set file exclude and include attributes ed Do not add empty directories en Do not put 'end of archive' block ep Exclude paths from names ep1 Exclude base directory from names ep3 Expand paths to full including the drive letter f Freshen files hp[password] Encrypt both file data and headers id[c,d,p,q] Disable messages ierr Send all messages to stderr ilog[name] Log errors to file (registered versions only) inul Disable all messages isnd Enable sound k Lock archive kb Keep broken extracted files m&lt;0..5&gt; Set compression level (0-store...3-default...5-maximal) mc&lt;par&gt; Set advanced compression parameters md&lt;size&gt; Dictionary size in KB (64,128,256,512,1024,2048,4096 or A-G) ms[ext;ext] Specify file types to store n&lt;file&gt; Include only specified file n@ Read file names to include from stdin n@&lt;list&gt; Include files in specified list file o[+|-] Set the overwrite mode ol Save symbolic links as the link instead of the file or Rename files automatically ow Save or restore file owner and group p[password] Set password p- Do not query password r Recurse subdirectories r0 Recurse subdirectories for wildcard names only rr[N] Add data recovery record rv[N] Create recovery volumes s[&lt;N&gt;,v[-],e] Create solid archive s- Disable solid archiving sc&lt;chr&gt;[obj] Specify the character set sfx[name] Create SFX archive si[name] Read data from standard input (stdin) sl&lt;size&gt; Process files with size less than specified sm&lt;size&gt; Process files with size more than specified t Test files after archiving ta&lt;date&gt; Process files modified after &lt;date&gt; in YYYYMMDDHHMMSS format tb&lt;date&gt; Process files modified before &lt;date&gt; in YYYYMMDDHHMMSS format tk Keep original archive time tl Set archive time to latest file tn&lt;time&gt; Process files newer than &lt;time&gt; to&lt;time&gt; Process files older than &lt;time&gt; ts&lt;m,c,a&gt;[N] Save or restore file time (modification, creation, access) u Update files v Create volumes with size autodetection or list all volumes v&lt;size&gt;[k,b] Create volumes with size=&lt;size&gt;*1000 [*1024, *1] ver[n] File version control vn Use the old style volume naming scheme vp Pause before each volume w&lt;path&gt; Assign work directory x&lt;file&gt; Exclude specified file x@ Read file names to exclude from stdin x@&lt;list&gt; Exclude files in specified list file y Assume Yes on all queries z[file] Read archive comment from file]]></content>
      <categories>
        <category>Linux运维日常</category>
      </categories>
      <tags>
        <tag>Linux运维日常</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[phpMyAdmin搭建]]></title>
    <url>%2F2019%2F04%2F26%2FphpMyAdmin%E6%90%AD%E5%BB%BA%2F</url>
    <content type="text"><![CDATA[在已有的 lnmp 环境下搭建 phpMyAdmin。 由于服务器做了限制，隧道端口转发等都不能使用，导致 Navicat 管理工具不能使用，只能通过 phpMyAdmin 来进行管理了。 下载phpMyAdmin\官网地址：https://www.phpmyadmin.net/ 上传到服务器进行安装 123# unzip phpMyAdmin-4.8.5-all-languages.zip# mv phpMyAdmin-4.8.5-all-languages /opt/phpMyAdmin# chown apache. /opt/phpMyAdmin 编辑配置文件 config.default.php 123456# vim /opt/phpMyAdmin/libraries/config.default.php$cfg[&apos;Servers&apos;][$i][&apos;host&apos;] = &apos;130.39.113.45&apos;;$cfg[&apos;Servers&apos;][$i][&apos;port&apos;] = &apos;3306&apos;;$cfg[&apos;Servers&apos;][$i][&apos;socket&apos;] = &apos;socket&apos;;$cfg[&apos;Servers&apos;][$i][&apos;user&apos;] = &apos;tj_court&apos;;$cfg[&apos;Servers&apos;][$i][&apos;password&apos;] = &apos;AigheiguSh4eesh0eey8&apos;; 配置nginx站点 1234567891011121314151617181920212223242526272829# vim phpMyAdmin.confserver &#123; listen 80; server_name www.phpadmin.com; autoindex off; error_log logs/phpadmin_error.log error; access_log logs/phpadmin_access.log main; location / &#123; root /opt/phpMyAdmin; index index.php index.html index.htm; &#125; fastcgi_intercept_errors on; error_page 404 /404.html; location ~ \.php$ &#123; root html; fastcgi_pass 127.0.0.1:9000; fastcgi_index index.php; fastcgi_param SCRIPT_FILENAME /opt/phpMyAdmin$fastcgi_script_name; include fastcgi_params; &#125; location ~ /\. &#123; deny all; error_page 403 /404.html; &#125;&#125; 配置完成后启动nginx访问配置的域名进行连接]]></content>
      <categories>
        <category>Linux运维日常</category>
      </categories>
      <tags>
        <tag>Linux运维日常</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[MySQL自动备份脚本]]></title>
    <url>%2F2019%2F04%2F24%2FMySQL%E8%87%AA%E5%8A%A8%E5%A4%87%E4%BB%BD%E8%84%9A%E6%9C%AC%2F</url>
    <content type="text"><![CDATA[通过 shell 脚本定时备份数据库，并定时清理ceshi yixia 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465#!/bin/bash#Desc:本地数据库备份脚本#Date:2017-12-24#by:Lee-YJ#运行脚本前先创建一个备份用户，并授予权限#mysql&gt; grant select,insert,lock tables,show view,trigger on *.* to back@"127.0.0.1" identified by "oodaeh7phoe1iboh7Jua";#mysql&gt; flush privileges;mysqluser=back #用于数据库备份的用户名mysqlpassw=oodaeh7phoe1iboh7Jua #用户密码mysqlhost=127.0.0.1 #连接数据库的hostbakpath=/opt/data/Back/DBbak #备份数据库存放的路径bakdate=`date '+%Y%m%d'`baktime=`date '+%H%M'`#----------------------------获取mysql中的数据库名---------------------------------/usr/bin/mysql -u$mysqluser -h $mysqlhost -p$mysqlpassw -e "show databases;"|grep -v Database|grep -v information_schema |grep -v performance_schema|grep -v mysql|grep -v test &gt; /tmp/DBname#----------------------------数据库备份--mysqldump备份------------------------------if [ ! -d "$bakpath" ];then mkdir -p $bakpathficd $bakpathif [ ! -d "$bakdate" ];then mkdir $bakdateficd $bakdateecho "------------------------$bakdate$baktime-------------------------------------" &gt;&gt; $bakpath/DBbak.logfor DBname in `cat /tmp/DBname`;do if [ ! -d "$DBname" ];then mkdir $DBname fi /usr/bin/mysqldump --routines --triggers -u$mysqluser -h $mysqlhost -p$mysqlpassw $DBname &gt; $DBname/$baktime\.sql if [ $? = 0 ];then echo "$DBname Back OK!" &gt;&gt; $bakpath/DBbak.log else echo "$DBname Back ERROR!" &gt;&gt; $bakpath/DBbak.log fidoneecho "" &gt;&gt; $bakpath/DBbak.log #----------------------------删除5天之前的数据备份，并随机保留一份--------------------------------shopt -s extglobolddate=`date '+%Y%m%d' -d "-6 days"`cd $bakpath/$olddatefor deldbname in `ls $bakpath/$olddate`;do cd $deldbname file=`ls| sort -R | head -n1` rm -f !($file)doneif [ ! -d "$bakpath/Oldest" ];then mkdir -p $bakpath/Oldestfimv $bakpath/$olddate $bakpath/Oldest/rm -f /tmp/DBname]]></content>
      <categories>
        <category>Shell</category>
      </categories>
      <tags>
        <tag>Linux运维日常</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ftp虚拟用户]]></title>
    <url>%2F2019%2F04%2F23%2Fftp%E8%99%9A%E6%8B%9F%E7%94%A8%E6%88%B7%2F</url>
    <content type="text"><![CDATA[需求：进（账户）\username: ftpComeSsbq\password: ftpcome#@UkieO9\上传文件的目录：/opt/ftp/come 出（账户）\username: ftpOutSsbq\password: ftpout#@45oUkie\上床文件的目录：/opt/ftp/out 具体步骤1 安装软件1# yum -y install vsftpd 2 创建相应的ftp数据目录1# mkdir -p /opt/ftp/&#123;come,out&#125; 3 创建一个用户提供给虚拟用户使用1# useradd -s /sbin/nologin virtual 4 将ftp数据目录设置成virtual用户12345# chown virtual. /opt/ftp/ -R# ll /opt/ftp/total 8drwxr-xr-x 2 virtual virtual 4096 Apr 17 12:07 comedrwxr-xr-x 2 virtual virtual 4096 Apr 17 12:07 out 5 创建虚拟帐号与密码的文本文件(一行账号，一行密码, 注意不要有多余的空格)12345# vim /etc/vsftpd/logins.txtftpComeSsbqftp_come_#@UkieO9ftpOutSsbqftp_out_#@45oUkie 6 将创建好的密码文件txt格式转换db格式1# db_load -T -t hash -f /etc/vsftpd/logins.txt /etc/vsftpd/login.db 7 定义db文件的权限1# chmod 600 /etc/vsftpd/login.db 8 定义pam认证文件123# vim /etc/pam.d/ftpauth required /lib64/security/pam_userdb.so db=/etc/vsftpd/loginaccount required /lib64/security/pam_userdb.so db=/etc/vsftpd/login 9 配置vsftpd主配置文件123456789101112131415161718192021222324252627282930313233343536# cp /etc/vsftpd/vsftpd.conf&#123;,.bak&#125;# vim /etc/vsftpd/vsftpd.conf#禁止匿名登录FTP服务器anonymous_enable=NO#允许本地用户登录FTP服务器local_enable=YES#可以上传(全局控制) write_enable=NO#匿名用户可以上传anon_upload_enable=NO#匿名用户可以建目录anon_mkdir_write_enable=NO#匿名用户修改删除anon_other_write_enable=NO#全部用户被限制在主目录chroot_local_user=YES#将所有用户看成虚拟用户guestguest_enable=YES#指定虚拟用户，也就是将guest用户映射到virtual用户guest_username=virtual#指定为独立服务listen=YES#指定监听的端口listen_port=21#开启被动模式pasv_enable=YES#FTP服务器公网IPpasv_address=120.79.93.66#设置被动模式下，建立数据传输可使用port范围的最小值pasv_min_port=10000#设置被动模式下，建立数据传输可使用port范围的最大值pasv_max_port=10088#是否允许匿名用户下载全局可读的文件anon_world_readable_only=NO#指定虚拟用户配置文件的路径user_config_dir=/etc/vsftpd/user_conf 10 创建上面配置文件中指定的子配置文件目录 user_conf1# mkdir /etc/vsftpd/user_conf 11 定义 ftpComeSsbq 用户的配置文件1234567# vim /etc/vsftpd/user_conf/ftpComeSsbqwrite_enable=YESanon_world_readable_only=noanon_upload_enable=YESanon_mkdir_write_enable=YESanon_other_write_enable=YESlocal_root=/opt/ftp/come 12 定义 ftpOutSsbq 用户的配置文件1234567# vim /etc/vsftpd/user_conf/ftpOutSsbqwrite_enable=YESanon_world_readable_only=noanon_upload_enable=YESanon_mkdir_write_enable=YESanon_other_write_enable=YESlocal_root=/opt/ftp/out 13 启动vsftpd1# service vsftpd start 14 测试…]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux运维日常</tag>
      </tags>
  </entry>
</search>
